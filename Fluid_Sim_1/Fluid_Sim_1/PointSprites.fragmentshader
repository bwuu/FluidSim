#version 330 core
out vec4 color;

uniform vec3 Color;
uniform vec3 lightDir;
uniform sampler2D texture;

varying float DEPTH;

void main(void)
{
    // calculate normal from texture coordinates
    vec3 N;
    N.xy = gl_PointCoord* 2.0 - vec2(1.0);    
    float mag = dot(N.xy, N.xy);
    if (mag > 1) discard;   // kill pixels outside circle
    N.z = sqrt(1.0-mag);

    // calculate lighting
    float diffuse = max(0.0, dot(lightDir, N));

    //color = vec4(Color,1) * max( diffuse, 0.4); 
    color = vec4(DEPTH, DEPTH, DEPTH, 1);
    //color = vec4(Color, 1);
}
